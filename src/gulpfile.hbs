const gulp = require('gulp');
const plumber = require('gulp-plumber');
const rename = require('gulp-rename');
const notify = require('gulp-notify');
const sourcemaps = require('gulp-sourcemaps');
{{#if cssConcat}}
const concat = require('gulp-concat');
{{/if}}
{{#if jsConcat}}
{{#unless cssConcat}}
const concat = require('gulp-concat');
{{/unless}}
{{/if}}
{{#if autoPrefix}}
const autoPrefixer = require('gulp-autoprefixer');
{{/if}}
{{#if cssMin}}
const cleanCss = require('gulp-clean-css');
{{/if}}
{{#if cssProcessor}}
const {{cssProcessor}} = require('gulp-{{cssProcessor}}');
{{/if}}

{{#if processCss}}
gulp.task('css', () => {
  gulp.src(['{{cssSource}}/**/*.{{cssExt}}'])
    .pipe(plumber({
      handleError: err => {
        console.log(err);
        this.emit('end');
      }
    }))
    {{#if cssProcessor}}
    .pipe(sourcemaps.init())
    .pipe({{cssProcessor}}())
    {{/if}}
    {{#if autoPrefix}}
    .pipe(autoPrefixer())
    {{/if}}
    {{#if cssConcat}}
    .pipe(concat('{{cssFile}}'))
    {{/if}}
    .pipe(gulp.dest('{{cssDest}}'))
    {{#if cssMin}}
    .pipe(rename({suffix: '.min'}))
    .pipe(cleanCss())
    {{/if}}
    {{#if cssProcessor}}
    .pipe(sourcemaps.write())
    {{/if}}
    .pipe(gulp.dest('{{cssDest}}'))
    .pipe(notify('css task finished'))
});
{{/if}}

gulp.task('watch', () => {
  {{#if processCss}}
  gulp.watch('{{cssSource}}/**/*.{{cssExt}}',['css']);
  {{/if}}
});

gulp.task('default', [
  {{#if processCss}}
  'css',
  {{/if}}
  'watch'
]);
